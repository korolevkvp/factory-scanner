
entity Worker {
	firstName String,
    middleName String,
    lastName String,
    salary Long,
	phoneNumber String,
	hireDate LocalDate,
	salary Long
    grade Long
}

entity Machine {
	model String,
    type MachineType
}

enum MachineType {
    LATHE_TURNING,
    LATHE_REVOLVING,
    AUTOMATIC,
    LATHE_CAROUSEL,
    BORING,
    COORDINATE_BORING, 
    DRILLING,
    MILLING,
    PLANING_MORTISING,
    DRAWING,
    GRINDING,
    TOOTH_CUTTING,
    SPECIAL,
    CUT_OFF
}

entity Factory {
	name String,
	address String,
	postalCode String,
}

entity Job {
	name String,
    type JobType,
	minSalary Long,
	maxSalary Long,
    gradeCount Long
}

enum JobType {
	PRODUCTION,
    SUPPORTIVE,
    ATTENDANT,
    TECH_ENG,
    ACCOUNTING
}

relationship ManyToOne {
	Machine{factory(name)} to Factory,
    Worker{job(name)} to Job,
    Worker{factory(name)} to Factory
}

// Set pagination options
paginate Machine, Worker, Factory with infinite-scroll
paginate Job with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
angularSuffix * with myAngularSuffix
